[["Lucas", "https://plus.google.com/117844313637558297240", "gp-1480394285613", "<p>With this approach, tablets (and any other larger-device browsers that respect the viewport meta tag) will get a zoomed-in version of this \"mobile layout\".  Similarly, different-sized phones will get text at significantly different physical sizes.  That's probably not a huge issue in practice, but it is a limitation of this technique to be aware of.</p>", 1480394285], ["Lucas", "https://plus.google.com/117844313637558297240", "gp-1480394570814", "<p>&gt; I figured out how to fix the sizing for the buttons: \"zoom: 2\"\n<br>\n<br>\nI think background-size is the CSS WG's intended property for image sprites at non-px resolutions, but yeah, I expect zoom also works.  And I think transform: scale(2) is basically equivalent to zoom: 2, if you prefer to support Firefox instead of old IE.</p>", 1480394570], ["Jeff&nbsp;Kaufman", "https://plus.google.com/103013777355236494008", "gp-1480424990577", "<p>@<a href=\"https://plus.google.com/117844313637558297240\">Lucas</a>\n\u00a0What I want is something where the browser can tell me guesses about the expected arc size of a pixel, since that's what gives the \"this is too big/small\" experience.  I know the browser can't do this perfectly, since you can always hook something up to a giant screen or something, but it should be able to be pretty good.</p>", 1480424990], ["Jeff&nbsp;Kaufman", "https://plus.google.com/103013777355236494008", "gp-1480425032572", "<p>@<a href=\"https://plus.google.com/117844313637558297240\">Lucas</a>\n\u00a0Yes, it looks like \"transform: scale(2)\" is a much better choice, thanks!</p>", 1480425032], ["Jeff&nbsp;Kaufman", "https://plus.google.com/103013777355236494008", "gp-1480430194014", "<p>@<a href=\"https://plus.google.com/117844313637558297240\">Lucas</a>\n I just tried it with \"transform: scale(2)\" and it moved the buttons to completely the wrong place.  I added \"transform-origin: 0 0\" and it mostly worked, except it moved the rightmost buttons to be out of the box off the screen.  Here's what that looked like:\n<br>\n<br>\n<br>\n<a href=\"https://plus.google.com/photos/103013777355236494008/albums/6358399270252683569/6358399270840395186\">https://plus.google.com/photos/103013777355236494008/albums/6358399270252683569/6358399270840395186</a></p>", 1480430194], ["Jeff&nbsp;Kaufman", "https://plus.google.com/103013777355236494008", "gp-1480430236163", "<p>@<a href=\"https://plus.google.com/117844313637558297240\">Lucas</a>\n On the other hand, \"zoom: 2\" degrades gracefully to just small buttons in FF, so I think I'll stick with that.\n<br>\n<a href=\"https://plus.google.com/photos/103013777355236494008/albums/6358399447988056849/6358399448364160786\">https://plus.google.com/photos/103013777355236494008/albums/6358399447988056849/6358399448364160786</a></p>", 1480430236], ["Lucas", "https://plus.google.com/117844313637558297240", "gp-1480436676208", "<p>Fair enough.  I forgot that zoom changes the element's layout dimensions (whereas transform doesn't).</p>", 1480436676], ["Lucas", "https://plus.google.com/117844313637558297240", "gp-1480438136775", "<p>@<a href=\"https://plus.google.com/103013777355236494008\">Jeff&nbsp;Kaufman</a>\n<br>\n&gt; What I want is something where the browser can tell me guesses about the expected arc size of a pixel...\n<br>\n<br>\nCSS \"px\" was supposed to be what you want, and it generally is fairly close if you set &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;.  The downside is that you get stuck rewriting all of your layout CSS to work on the smaller screen's width, which is exactly the task you're trying to avoid in this case.\n<br>\n<br>\nI guess you're wishing that CSS had an accessor function for the computed value of an at-rule property.  Then you could (in theory) ask for the value of @viewport's zoom property and use that with calc() to compute your layout dimensions.  I don't expect that to ever happen, though, because it'd blow a lot of the renderer's performance optimizations out of the water.</p>", 1480438136], ["Jeff&nbsp;Kaufman", "https://plus.google.com/103013777355236494008", "gp-1481749857416", "<p>@<a href=\"https://plus.google.com/117844313637558297240\">Lucas</a>\n\u200b I figured out how to do it: gate the font boosting with a media query on device-width. Now if you visit an EA forum page on a tablet you'll get the narrow-screen changes but not the enlargement changes.</p>", 1481749857]]